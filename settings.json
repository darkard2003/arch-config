{
    "workbench.colorTheme": "Catppuccin Mocha",
    "editor.inlineSuggest.enabled": true,
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": true,
        "scminput": false,
        "yaml": true,
        "python": true,
        "dart": true,
        "cpp": true
    },
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.rulers": [
            80
        ],
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": "off"
    },
    "git.confirmSync": false,
    "git.autofetch": true,
    "git.suggestSmartCommit": false,
    "gitlens.defaultTimeFormat": null,
    "gitlens.defaultDateShortFormat": null,
    "dart.previewFlutterUiGuides": true,
    "dart.previewFlutterUiGuidesCustomTracking": true,
    "files.autoSave": "afterDelay",
    
    "vim.leader": "<space>",
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": [
                "j",
                "k"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        // remap leader fm to format document
        {
            "before": [
                "<leader>",
                "f",
                "m"
            ],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        // Leader ff to find file
        {
            "before": [
                "<leader>",
                "f",
                "f"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ]
        },

        // Leader rn to rename symbol
        {
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        // // remap leader gf to show problems
        // {
        //     "before": [
        //         "<leader>",
        //         "g",
        //         "f"
        //     ],
        //     "commands": [
        //         "editor.problems.showQuickFixes"
        //     ]
        // },
        // Remap K to hover
        {
            "before": [
                "K"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        },
        // remap leader ca to code action
        {
            "before": [
                "<leader>",
                "c",
                "a"
            ],
            "commands": [
                "editor.action.quickFix"
            ]
        },

        // Use ctrl i to github fix this
        {
            "before": [
                "<C-i>"
            ],
            "commands": [
                "github.copilot.fixThis"
            ]
        },

        // use ctrl e to open sidebar
        {
            "before": [
                "<C-e>"
            ],
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        // use leader leader to open control panel
        {
            "before": [
                "<leader>",
                "<leader>"
            ],
            "commands": [
                "workbench.action.oepnSetting"
            ]
        },

        // use ctrl p to open command palette
        {
            "before": [
                "<C-p>"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ]
        },

        // use ctrl t to open terminal
        {
            "before": [
                "<C-t>"
            ],
            "commands": [
                "workbench.action.terminal.toggleTerminal"
            ]
        },

        // In terminal use ctrl k to go back to editor
        {
            "before": [
                "<C-k>"
            ],
            "commands": [
                "workbench.action.focusActiveEditorGroup"
            ]
        },
    ],
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
    "terminal.integrated.fontSize": 12,
    "go.toolsManagement.autoUpdate": true,
    "workbench.startupEditor": "none",
    "editor.lineNumbers": "relative",
    "redhat.telemetry.enabled": true,
    "accessibility.voice.keywordActivation": "chatInContext",
    "workbench.productIconTheme": "fluent-icons",
    "dart.debugExternalPackageLibraries": true,
    "dart.debugSdkLibraries": true,
    "breadcrumbs.enabled": false,
    "editor.stickyScroll.enabled": false,
    "workbench.sideBar.location": "right",
    "github.copilot.editor.enableAutoCompletions": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "workbench.iconTheme": "vscode-icons",
    "yaml.schemas": {
        "file:///home/kchowdhury/.vscode/extensions/atlassian.atlascode-3.0.10/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    },
    "window.dialogStyle": "custom",
    "animations.Install-Method": "Apc Customize UI++",
    "apc.imports": [
        "file://${userHome}/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.4/dist/updateHandler.js"
    ],
    "window.titleBarStyle": "custom",
    "cmake.showOptionsMovedNotification": false,
    "kotlin.languageServer.enabled": false,
    "kotlin.debugAdapter.enabled": false,
    "editor.fontFamily": "'JetBrainsMono Nerd Font', 'Droid Sans Mono', 'monospace', monospace",
    "git.openRepositoryInParentFolders": "always",
    "omnisharp.enableAsyncCompletion": true,
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "dart.flutterSdkPath": "/home/dark/dev/flutter",
    "vsicons.dontShowNewVersionMessage": true
}